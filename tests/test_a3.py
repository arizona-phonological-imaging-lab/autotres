from a3.roi import ROI
from a3.evaluate import *

import unittest

class TestROI(unittest.TestCase):
    """
    Tests ROI behavior
    """
    def test_roi(self):
        print("ROI(1,2,3,4) == ROI([1,2,3,4]) ? => {0}".format(ROI(1,2,3,4) == ROI([1,2,3,4])))
        assert(ROI(1,2,3,4) == ROI([1,2,3,4]))


    def test_trim_traces(self):
        # the traces to trim
        gt = [(0, 0), (0, 0), (0, 0),
              (0, 0), (0, 0), (0, 0),
              (0, 0), (0, 0), (0, 0),
              (0, 0), (0, 0), (0, 0),
              (0, 0), (0, 0), (0, 0),
              (0, 0), (0, 0), (0, 0),
              (0, 0), (0, 0), (0, 0),
              (0, 0), (0, 0), (0, 0),
              (0, 0), (0, 0), (0, 0),
              (0, 0), (0, 0), (0, 0),
              (0, 0), (554.0, 217.0)]

        et = [(0, 0), (0, 0), (0, 0),
              (274.84, 303.71), (280.53, 297.18), (286.55, 289.68),
              (292.26, 282.38), (298.06, 275.44), (304.73, 268.18),
              (312.14, 260.81), (319.41, 253.97), (327.16, 247.25),
              (335.46, 240.72), (344.18, 234.72), (353.67, 229.54),
              (364.22, 225.36), (374.45, 221.79), (384.96, 218.75),
              (396.23, 217.18), (407.06, 217.11), (417.59, 217.65),
              (428.54, 218.86), (439.9, 221.03), (450.48, 223.95),
              (460.69, 228.01), (470.31, 233.12), (479.86, 239.19),
              (488.67, 245.42), (497.16, 251.96), (505.98, 258.72),
              (514.7, 265.45), (522.49, 272.64)]

        # the desired output

        gt_desired = [(554.0, 217.0)]
        et_desired = [(522.49, 272.64)]

        gt_pred, et_pred = ContourComparison.trim_traces(gt, et)
        assert(gt_desired == gt_pred)
        assert(et_desired == et_pred)
        print("a3.evaluate.ContourComparison.trim_traces() works...")

if __name__ == '__main__':
    unittest.main()
